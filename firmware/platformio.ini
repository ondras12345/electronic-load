; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = ATmega8


[optiboot_data]
file = bootloaders/Optiboot-8.0/bootloaders/optiboot/optiboot_atmega8.hex
# http://eleccelerator.com/fusecalc/fusecalc.php?chip=atmega8
lfuse = 0x3F
hfuse = 0xCC
lock_bits = 0x0F
unlock_bits = 0x3F

# https://community.platformio.org/t/custom-variables-in-plaform-ini/23638/3
# pio run -e optiboot -t upload
[env:optiboot]
platform = atmelavr
board = ATmega8

upload_command = avrdude -C $PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf -v -p $BOARD_MCU -c usbasp -e -Ulock:w:${optiboot_data.unlock_bits}:m -Uhfuse:w:${optiboot_data.hfuse}:m -Ulfuse:w:${optiboot_data.lfuse}:m \; avrdude -C $PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf -v -p $BOARD_MCU -c usbasp -Uflash:w:${optiboot_data.file}:i -Ulock:w:${optiboot_data.lock_bits}:m


[env:ATmega8]
platform = atmelavr
board = ATmega8

#upload_protocol = usbasp  # if bootloader does not work
upload_protocol = arduino
upload_speed = 115200

board_upload.maximum_size = 7680
board_build.f_cpu = 16000000L
board_build.core =


[env:native]
# only for tests
platform = native
build_flags =
	-D UNITY_INT_WIDTH=16
	-lm
